[metadata]
name = dns-zone-manager-server
version = 0.1
description = "GXFS' DNS Zone Manager Server"
long_description = file: README.md, LICENSE.txt
author = Martin Hoffmann
author_email = martin@nlnetlabs.nl
url = https://www.lightest.eu/
license_files = LICENSE.txt
license = MIT
requires-python = ">=3.11"

[options]
zip_safe = False
include_package_data = True
packages =
    zonedb

install_requires =
    falcon==3.1.1
    gunicorn==19.9.0
    SQLAlchemy==2.0.1
    pyjwt[crypto] == 2.5.0
    requests >= 2.31.0
    marshmallow >= 3.20.2

[options.package_data]
* =
    py.typed

[options.entry_points]
console_scripts =
    dns-zone-manager-server = zonedb.cli:entry_point

[options.extras_require]
dev =
    pylint
    pytest
    mypy
    types-requests
    coverage
    third-party-license-file-generator
    pylint_junit

[isort]
known_typing=typing
known_zonedb=zonedb
;suppress inspection for section "SpellCheckingInspection"
sections=FUTURE,TYPING,STDLIB,FIRSTPARTY,THIRDPARTY,ZONEDB,LOCALFOLDER

[coverage:run]
data_file=.coverage
branch=True
source=zonedb

[coverage:report]
fail_under=10
show_missing=True
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[tool:pytest]
addopts = --strict-markers -m "not integration" -v --doctest-modules
markers =
    integration
testpaths = tests
filterwarnings =
    error

[pylint.BASIC]
docstring-min-length=5


[pylint.FORMAT]
# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$|See `https://\S+`_

[pylint.MESSAGES CONTROL]
disable=
    fixme

[pylint.MASTER]
load-plugins=pylint_junit

[mypy]
strict = True
show_error_codes = True
