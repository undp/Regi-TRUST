default:
  image: node:18
  cache:  # Cache modules in between jobs
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .npm/

variables:
  UI_SPECIFIC_IMAGE_NAME: ${HARBOR_HOST}/${HARBOR_PROJECT}/${CI_PROJECT_NAME}-ui:${CI_COMMIT_BRANCH}
  UI_TAG_IMAGE_NAME: ${HARBOR_HOST}/${HARBOR_PROJECT}/${CI_PROJECT_NAME}-ui:${CI_COMMIT_TAG}
  NSD_SPECIFIC_IMAGE_NAME: ${HARBOR_HOST}/${HARBOR_PROJECT}/${CI_PROJECT_NAME}-nsd:${CI_COMMIT_BRANCH}
  NSD_TAG_IMAGE_NAME: ${HARBOR_HOST}/${HARBOR_PROJECT}/${CI_PROJECT_NAME}-nsd:${CI_COMMIT_TAG}


stages:
  - test
  - prebuild
  - build
  - deploy

sast:
  stage: test
include:
- template: Security/Dependency-Scanning.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml


runLintForUI:
  stage: test
  script:
    - cd ui
    - npm ci --cache .npm --prefer-offline
    - npm run lint

runTestForUI:
  stage: test
  script:
    - cd ui
    - npm ci --cache .npm --prefer-offline
    - npm run test
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: ui/coverage/cobertura-coverage.xml

runPreBuildForUI:
  stage: prebuild
  script:
    - cd ui
    - npm ci --cache .npm --prefer-offline
    - npm run build
  artifacts:
    paths:
      - ui/dist/

runLicenseCheckForUI:
  stage: prebuild
  script:
    - cd ui
    - npm ci --cache .npm --prefer-offline
    - npm run license:scan
  artifacts:
    paths:
      - ui/THIRD-PARTY.txt

runBuildForUI:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${HARBOR_HOST}\":{\"auth\":\"$(echo -n ${HARBOR_USERNAME}:${HARBOR_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context "${CI_PROJECT_DIR}/ui" --dockerfile "${CI_PROJECT_DIR}/ui/Dockerfile" --cache=true --cache-ttl=24h --destination "${UI_SPECIFIC_IMAGE_NAME}"
  only: 
    - master

runReleaseBuildForUI:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${HARBOR_HOST}\":{\"auth\":\"$(echo -n ${HARBOR_USERNAME}:${HARBOR_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context "${CI_PROJECT_DIR}/ui" --dockerfile "${CI_PROJECT_DIR}/ui/Dockerfile" --cache=true --cache-ttl=24h --destination "${UI_TAG_IMAGE_NAME}"
  only:
    - tags

runBuildForNSD:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${HARBOR_HOST}\":{\"auth\":\"$(echo -n ${HARBOR_USERNAME}:${HARBOR_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/Dockerfile" --cache=true --cache-ttl=24h --destination "${NSD_SPECIFIC_IMAGE_NAME}"
  only: 
    - master


runReleaseBuildForNSD:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${HARBOR_HOST}\":{\"auth\":\"$(echo -n ${HARBOR_USERNAME}:${HARBOR_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/Dockerfile" --cache=true --cache-ttl=24h --destination "${NSD_TAG_IMAGE_NAME}"
  only:
    - tags
    
